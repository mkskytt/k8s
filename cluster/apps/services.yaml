---
# Application Services for Direct Routing
# These are the target services that cloudflared tunnel routes traffic to
# Customer CNAMEs (e.g., myapp.com â†’ app.k8s.mkskytt.dev) automatically work
# because cloudflared routes by hostname, not origin

apiVersion: v1
kind: Service
metadata:
  name: my-app-service
  namespace: default
  labels:
    app: my-app
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: my-app

---
apiVersion: v1
kind: Service
metadata:
  name: my-api-service
  namespace: default
  labels:
    app: my-api
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: my-api

---
apiVersion: v1
kind: Service
metadata:
  name: dashboard-service
  namespace: default
  labels:
    app: dashboard
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: dashboard

---
# Sample Deployments (replace with your actual applications)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: app
        image: nginx:alpine
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-api
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-api
  template:
    metadata:
      labels:
        app: my-api
    spec:
      containers:
      - name: api
        image: nginx:alpine
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashboard
  template:
    metadata:
      labels:
        app: dashboard
    spec:
      containers:
      - name: dashboard
        image: nginx:alpine
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"